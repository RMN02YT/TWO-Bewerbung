name: Docker Build

on:
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BOT_TOKEN: ${{ secrets.TOKEN }}
  CLIENT_ID: ${{ secrets.CID }}
  GUILD_ID: ${{ secrets.GID }}

jobs:
  test:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - run: echo 
      - run: npm run test-ci
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v2
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2      
    - name: Announce deployment
      run: |
        curl -X POST \
        -H "Content-Type: application/json" \
        -d '{"environment": "production", "commit": "'"$GITHUB_SHA"'", "container-location": "'${{ env.REGISTRY }}/${{ github.GITHUB_REPOSITORY_OWNER }}/${{ env.IMAGE_NAME }}:latest'"}' \
        ${{ secrets.SERVER_URL }}
